package com.esprit.hypnotrip.persistence;
// Generated 19 nov. 2016 19:30:02 by Hibernate Tools 4.3.1.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Tickets generated by hbm2java
 */
@Entity
@Table(name = "tickets", catalog = "hypnodb")
public class Tickets implements java.io.Serializable {

	private Integer ticketId;
	private Integer eventPageId;
	private float price;
	private String type;
	private String userId;
	
	private List<BookDescription> bookDescriptions;

	public Tickets() {
	}

	public Tickets(float price, String userId) {
		this.price = price;
		this.userId = userId;
	}

	public Tickets(Integer eventPageId, float price, String type, String userId) {
		this.eventPageId = eventPageId;
		this.price = price;
		this.type = type;
		this.userId = userId;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "TicketId", unique = true, nullable = false)
	public Integer getTicketId() {
		return this.ticketId;
	}

	public void setTicketId(Integer ticketId) {
		this.ticketId = ticketId;
	}

	@Column(name = "Event_PageId")
	public Integer getEventPageId() {
		return this.eventPageId;
	}

	public void setEventPageId(Integer eventPageId) {
		this.eventPageId = eventPageId;
	}

	@Column(name = "Price", nullable = false, precision = 12, scale = 0)
	public float getPrice() {
		return this.price;
	}

	public void setPrice(float price) {
		this.price = price;
	}

	@Column(name = "type")
	public String getType() {
		return this.type;
	}

	public void setType(String type) {
		this.type = type;
	}

	@Column(name = "UserId", nullable = false, length = 128)
	public String getUserId() {
		return this.userId;
	}

	public void setUserId(String userId) {
		this.userId = userId;
	}

	
	@OneToMany(mappedBy="tickets",fetch=FetchType.EAGER)
	public List<BookDescription> getBookDescriptions() {
		return bookDescriptions;
	}

	public void setBookDescriptions(List<BookDescription> bookDescriptions) {
		this.bookDescriptions = bookDescriptions;
	}

}
